input:-webkit-autofill {
  box-shadow: 0 0 0px 1000px $color-white inset;
}

.bimdata-input {
  min-height: 32px;
  position: relative;
  font-family: $primary-font;
  &.not-empty {
    label {
      top: -22px;
      color: $color-primary;
      font-size: calculateEm(10px);
    }
  }
  input {
    padding: 0;
    width: 100%;
    height: 32px;
    border: none;
    display: flex;
    cursor: pointer;
    background-color: transparent;
    font-size: calculateEm(14px);
    &:focus {
      outline: none;
      & ~ label {
        top: -22px;
        font-size: calculateEm(10px);
      }
      & ~ .bar {
        &:after {
          width: 100%;
          transition: transform 0.2s cubic-bezier(0.55, 0, 0.55, 0.2);
          transform: scaleX(1);
        }
      }
    }
  }
  &__icon {
    position: absolute;
    right: 0;
    top: 8px;
  }
  label {
    position: absolute;
    top: 0;
    left: 0;
    font-size: calculateEm(12px);
    transform: translateY(8px);
    transition: 0.2s ease all;
    color: $color-tertiary-dark;
    cursor: pointer;
  }
  .bar {
    width: 100%;
    height: 1px;
    display: block;
    background: $color-tertiary;
    &::after,
    &::before {
      width: 0;
      height: 2px;
      @include pseudo;
      background-color: $color-primary;
      transform: scaleX(0);
    }
  }
  &.loading input ~ .bar {
    &:after {
      width: 50%;
      animation: scaleX 2s linear infinite none;
      transform-origin: right;
    }
    &:before {
      width: 50%;
      animation: scaleX 2s linear 1s infinite none;
      transform-origin: right;
    }
  }
  .error {
    color: $color-high;
    font-size: calculateEm(11px);
  }
  .success {
    color: $color-success;
    font-size: calculateEm(11px);
  }
  &.disabled {
    opacity: 0.6;
  }
  &.error {
    label {
      color: $color-high;
    }
    .bar {
      background-color: $color-high;
      &::before,
      &::after {
        background-color: $color-high;
      }
    }
  }
  &.success {
    label {
      color: $color-success;
    }
    .bar {
      background-color: $color-success;
      &::before,
      &::after {
        background-color: $color-success;
      }
    }
  }
}
